basePath: /api/v1
info:
  contact: {}
paths:
  /admin:
    delete:
      consumes:
      - application/json
      description: deletes an admin from the database
      parameters:
      - description: Email of the admin
        format: email
        in: query
        name: email
        required: true
        type: string
      - description: Token for authentification
        format: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Endpoint used to delete an admin
      tags:
      - admin
    get:
      consumes:
      - application/json
      description: gets an admin from the database
      parameters:
      - description: Token of the admin
        format: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Endpoint used to get an admin
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: saves an admin on the database
      parameters:
      - description: Email and password of the admin
        in: body
        name: credentials
        required: true
        schema:
          example: '{ "email": "admin@gmail.com", "password": "admin" }'
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Endpoint used to save an admin
      tags:
      - admin
  /admin/login:
    post:
      consumes:
      - application/json
      description: Given valid credentials, it returns a token
      parameters:
      - description: Email and password of the admin
        in: body
        name: loginRequest
        required: true
        schema:
          example: '{ "email": "admin@gmail.com", "password": "admin" }'
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Endpoint used to log in an admin
      tags:
      - admin
swagger: "2.0"
